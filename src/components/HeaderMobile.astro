---
import { getI18n } from "../i18n/ui"
import Menu from "../icons/Menu.astro"
import LanguageSelector from "./LanguageSelector.astro"

const { currentLocale = 'es' } = Astro
const i18n = getI18n({ currentLocale })

const navItems = i18n.MAIN_PAGE.HEADER.NAV_LINKS

const NAV_LINKS: { title: string, link: string }[] = []

NAV_LINKS.push(
    {
        title: navItems.EXPERIENCE.TITLE,
        link: navItems.EXPERIENCE.LINK
    },
    {
        title: navItems.PROJECTS.TITLE,
        link: navItems.PROJECTS.LINK
    },
    {
        title: navItems.DESIGNS.TITLE,
        link: navItems.DESIGNS.LINK
    
    }
)
---
<div class="fixed flex items-center justify-between w-full z-50 p-6 lg:hidden backdrop-blur-sm" id="nav-display">
    <button class="top-8 left-8 hover:scale-105 transition-all" id="open-nav">
        <Menu class="size-8" />
    </button>
    <LanguageSelector />
</div>
<header id="mobile-header" class="hidden fixed md:hidden bg-black/20 backdrop-blur-md z-10 border-white/20 border-b  w-full h-auto py-10 items-center flex-col">
    <nav class="flex flex-col gap-y-10 items-center text-xl mt-10">
        {
            NAV_LINKS.map((link) => (
                <a href={link.link} class="hover:text-yellow-700 dark:text-white transition-colors dark:hover:text-yellow-200 text-white lg:text-black ease-linear">{link.title}</a>
            ))
        }
    </nav>
</header>

<script>
    const currentNav = document.getElementById('nav-display')
    const openNav = document.getElementById('open-nav')
    const mobileHeader = document.getElementById('mobile-header')

    if (openNav && mobileHeader && currentNav) {
        openNav.addEventListener('click', () => {
            if (mobileHeader.classList.contains('hidden') && mobileHeader.classList.contains('close')) {
                mobileHeader.classList.remove('close')
                setTimeout(() => {
                    currentNav.classList.remove('backdrop-blur-sm')
                }, 200);
                mobileHeader.classList.add('open')
                setTimeout(() => {
                    mobileHeader.classList.remove('hidden');
                }, 100);
            } else {
                mobileHeader.classList.remove('open')
                mobileHeader.classList.add('close')
                currentNav.classList.add('backdrop-blur-sm')
                setTimeout(() => {
                    mobileHeader.classList.add('hidden');
                }, 500);
            }
        });
    }


</script>

